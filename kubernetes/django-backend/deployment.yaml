apiVersion: apps/v1
kind: Deployment
metadata:
  name: factory-simulator-backend
  labels:
    app: factory-simulator-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: factory-simulator-backend
  template:
    metadata:
      labels:
        app: factory-simulator-backend
    spec:
      containers:
        - name: django-backend
          image: kilthar/factory-simulator-django:latest
          imagePullPolicy: Always
          command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
#          TODO: use gunicorn after test phase
#          command: ["gunicorn", "--bind", "0.0.0.0:8000", "factory_simulator.wsgi:application"]
          ports:
            - containerPort: 8000
          env:
#            TODO: remove this env var after testing
            - name: DEBUG
              value: "True"
            - name: ALLOWED_HOSTS
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django-backend-secrets
                  key: SECRET_KEY
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_PASSWORD
          envFrom:
            - configMapRef:
                name: django-backend-config
          volumeMounts:
            - mountPath: /var/lib/busybox
              name: postgres-volume-mount
      volumes:
        - name: postgres-volume-mount
          persistentVolumeClaim:
            claimName: postgres-persistent-volume-claim
